name: Workflow to build the Backend

on:
  push:
    branches:
      - main
    paths: 
      - backend/**

jobs:
  build_backend:
    name: Build Backend using Maven
    runs-on: ubuntu-latest
    outputs:
      ARTIFACT_NAME: ${{ steps.mvn-build.outputs.ARTIFACT_NAME }}
    defaults:
      run:
        working-directory: backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build Backend with Maven
      id: mvn-build
      run: |
        ARTIFACT_ID=$(mvn -N -q -DforceStdout help:evaluate -Dexpression=project.artifactId)
        VERSION=$(mvn -N -q -DforceStdout help:evaluate -Dexpression=project.version)
        ARTIFACT_NAME="${ARTIFACT_ID}-${VERSION}.jar"

        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
        echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

        mvn -B package --file pom.xml

    - name: Upload Backend artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: backend/target/${{ env.ARTIFACT_NAME }}
    
    - name: Upload Dockerfile
      uses: actions/upload-artifact@v4
      with:
        name: Dockerfile
        path: backend/DockerfileProd

  build_docker_image:
    name: Build Docker image for Backend
    runs-on: ubuntu-latest
    needs: build_backend
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      ARTIFACT_NAME: ${{ needs.build_backend.outputs.ARTIFACT_NAME }}
      REGISTRY: ghcr.io
      IMAGE_NAME: backend
    steps:
      - name: Download Backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
      
      - name: Download Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: Dockerfile

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build Docker image for Backend
        env:
          SWOP_API_KEY: ${{ secrets.SWOP_API_KEY }}
        run: |
          IMAGE_NAME_TAG=$REGISTRY/${{ github.repository }}-$IMAGE_NAME:latest
          IMAGE_NAME_TAG=$(echo $IMAGE_NAME_TAG | tr '[A-Z]' '[a-z]')
          docker build -t $IMAGE_NAME_TAG --build-arg SWOP_API_KEY=$SWOP_API_KEY --build-arg JAR_FILE=$ARTIFACT_NAME -f DockerfileProd .
          docker push $IMAGE_NAME_TAG
          